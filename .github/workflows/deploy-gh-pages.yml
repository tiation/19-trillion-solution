name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Copy static files to build directory
        run: |
          mkdir -p _site
          # Copy all static files from root
          cp -r * _site/ 2>/dev/null || true
          # Remove unnecessary files from build
          rm -rf _site/.git _site/.github _site/node_modules _site/_site
          # Ensure index.html is in root
          if [ -f "index.html" ]; then
            cp index.html _site/
          fi
          # Copy dist files if they exist
          if [ -d "dist" ]; then
            cp -r dist/* _site/
          fi
          # Ensure .nojekyll exists
          touch _site/.nojekyll
          echo "Build directory contents:"
          ls -la _site/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

